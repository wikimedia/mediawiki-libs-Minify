)]}
{
"version": 3,
"sources": ["advanced.js"],
"sourcesContent": ["// Please preserve the line-ending whitespace in this file. \n// It is meant to cover the line start logic in consumeSource(). \n//\n// verifyMapSourceMap.js will treat every alphanumeric character in the minified\n// output as a token. So alphanumeric characters should only be used in a\n// start-of-token context. \n\na();\nAðŸ˜€ðŸ˜€ðŸ˜€(b, c);\n/* */ d();\ne(); /*\n*/ f(); /*\n*/ g(`\n`);\n\n// semicolon insertion, pad=\\n\nh(i)\nj(k)\n// maxLineLength\nmnnn// Operator padding\no(p+ +q);\n\n"],
"names": [],
"mappings": "AAOA,CAAC,CAAC,CAAC,CACH,OAAO,CAAC,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CAAC,CAAC,CACT,CAAC,CAAC,CAAC,CACA,CAAC,CAAC,CAAC,CACH,CAAC,CAAC;CACJ,CAAC,CAGF,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,CAAC,CAAC,sfAAsf,CAAC,CACzf,CAAC,CAAC,sfAAsf,CAAC;AAEzf,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC"
}
